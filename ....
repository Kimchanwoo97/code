using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using static System.Console;

namespace ConsoleApp1
{
    class Screen
    {
        public void Comscreen()
        {
            SetCursorPosition(18, 1);
            ForegroundColor = ConsoleColor.Red;
            WriteLine("Com Screen");

            ForegroundColor = ConsoleColor.White;
            SetCursorPosition(2, 3);
            WriteLine("┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓");
            for (int i = 0; i < 9; i++)
            {
                SetCursorPosition(2, 4 + i * 2);
                WriteLine("┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃");
                SetCursorPosition(2, 5 + i * 2);
                WriteLine("┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫");
            }
            SetCursorPosition(2, 22);
            WriteLine("┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃");
            SetCursorPosition(2, 23);
            WriteLine("┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛");
        }

        public void Playerscreen()
        {
            SetCursorPosition(68, 1);
            ForegroundColor = ConsoleColor.Red;
            WriteLine("Plyer Screen");

            ForegroundColor = ConsoleColor.White;
            SetCursorPosition(52, 3);
            WriteLine("┏━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┳━━━┓");
            for (int i = 0; i < 9; i++)
            {
                SetCursorPosition(52, 4 + i * 2);
                WriteLine("┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃");
                SetCursorPosition(52, 5 + i * 2);
                WriteLine("┣━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━╋━━━┫");
            }
            SetCursorPosition(52, 22);
            WriteLine("┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃");
            SetCursorPosition(52, 23);
            WriteLine("┗━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┻━━━┛");
        }
    }
     
    class Tast
    {
        public static void Obj(int x, int y, string s)
        {
            SetCursorPosition(x, y);
            WriteLine(s);
        }

        public void Game()
        {
            Random r = new Random();
            ConsoleKey key;
            bool s = true , s1 = true, s2 = true, s3 = true;
            
            int px, py;

            px = 4;
            py = 4;

            int x, y, x1, y1, x2, y2, x3, y3;

            #region com xy값
            
            while (true)
            {
                while (true)
                {
                    x = r.Next(4, 41);
                    y = r.Next(5, 23);

                    if (x % 4 == 0 && y % 2 == 0)
                    {
                        break;
                    }
                }

                while (true)
                {
                    x1 = r.Next(4, 41);
                    y1 = r.Next(5, 23);

                    if (x1 % 4 == 0 && y1 % 2 == 0)
                    {
                        break;
                    }
                }

                while (true)
                {
                    x2 = r.Next(4, 41);
                    y2 = r.Next(5, 23);

                    if (x2 % 4 == 0 && y2 % 2 == 0)
                    {
                        break;
                    }
                }

                while (true)
                {
                    x3 = r.Next(4, 41);
                    y3 = r.Next(5, 23);

                    if (x3 % 4 == 0 && y3 % 2 == 0)
                    {
                        break;
                    }
                }

                if (x != x1 && x != x2 && x != x3 && x1 != x2 && x1 != x3 && x2 != x3 &&
                    y != y1 && y != y2 && y != y3 && y1 != y2 && y1 != y3 && y2 != y3)
                {
                    break;
                }
                else
                    continue;
            }
            #endregion

            while (true)
            {
                Screen screen = new Screen();



                screen.Comscreen();
                screen.Playerscreen();

                if (s)
                {
                    Obj(x, y, "♣");
                }
                if(s1)
                {
                    Obj(x1, y1, "♠");
                }
                if (s2)
                {
                    Obj(x2, y2, "♥");
                }
                if (s3)
                {
                    Obj(x3, y3, "◆");
                }


                Obj(px, py, "□");
              
                key = ReadKey(true).Key;
                
                switch (key)
                {
                    case ConsoleKey.LeftArrow:
                        if (px > 4) px -= 4;
                        break;
                    case ConsoleKey.RightArrow:
                        if (px < 40) px += 4;
                        break;
                    case ConsoleKey.UpArrow:
                        if (py > 4) py -= 2;
                        break;
                    case ConsoleKey.DownArrow:
                        if (py < 25) py += 2;
                        break;
                    case ConsoleKey.Enter:
                        if(px == x && py == y)
                        {
                            s = true;
                        }
                        if (px == x1&& py == y1)
                        {
                            s1 = true;
                        }
                        if (px == x2 && py == y2)
                        {
                            s2 = true;
                        }
                        if (px == x3 && py == y3)
                        {
                            s3 = true;
                        }
                        break;
                }                      
            }          
        }
    }
    class Program
    {
        static void Main(string[] args)
        {
            ConsoleKey key;
            Tast tast = new Tast();
            while (true)
            {
                tast.Game();

                key = ReadKey(true).Key;

                switch(key)
                {
                    case ConsoleKey.NumPad1:
                        continue;
                }
            }

        }
    }
}
